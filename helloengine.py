import pygame, pygame.locals, sys
from engine.scenefactory import *
import time

pygame.init()

# Global state variable
Quit = False

# Level setup code
scene = SceneFactory.newLoadSceneFromFile("savefiles/example.json")

# Uncomment the following lines to use the saved json file
# scene = SceneFactory.newLoadSceneFromFile("savefiles/prova2.json")

# setup the window
window = pygame.display.set_mode(
    (scene.windowRect.width, scene.windowRect.height), 0, 32
)
pygame.display.set_caption("Titolo bellissimo")
scene.load()

# Saving the current scene in a JSON file
SceneFactory.newSaveSceneToFile(scene, "savefiles/prova2.json")


def process_events():
    global Quit
    # process all the events generated by the system
    for event in pygame.event.get():
        # event QUIT is generated when the user closes the application window
        if event.type == pygame.locals.QUIT:
            Quit = True


def update_game_logic(deltaTime):
    global scene

    scene.update(deltaTime)

    return


def render():
    global scene

    # clear the screen
    BLACK = (0, 0, 0)
    WHITE = (255, 255, 255)
    window.fill(BLACK)

    scene.render(window)

    # update the display with the new content of the window
    pygame.display.update()


# game loop
oldTime = time.time()
while not Quit:
    newTime = time.time()
    deltaTime = newTime - oldTime
    oldTime = newTime

    process_events()

    update_game_logic(deltaTime)

    render()

pygame.quit()
sys.exit()
